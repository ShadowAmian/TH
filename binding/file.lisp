(in-package :th)

(defmethod $fopenedp ((file file)) (eq 1 (th-file-is-opened ($handle file))))
(defmethod $fquietp ((file file)) (eq 1 (th-file-is-quiet ($handle file))))
(defmethod $fpedanticp ((file file)) (eq 0 (th-file-is-quiet ($handle file))))
(defmethod $freadablep ((file file)) (eq 1 (th-file-is-readable ($handle file))))
(defmethod $fwritablep ((file file)) (eq 1 (th-file-is-writable ($handle file))))
(defmethod $fbinaryp ((file file)) (eq 1 (th-file-is-binary ($handle file))))
(defmethod $fasciip ((file file)) (eq 0 (th-file-is-binary ($handle file))))
(defmethod $fautospacingp ((file file)) (eq 1 (th-file-is-auto-spacing ($handle file))))
(defmethod $fnoautospacingp ((file file)) (eq 0 (th-file-is-auto-spacing ($handle file))))
(defmethod $ferrorp ((file file)) (eq 1 (th-file-has-error ($handle file))))

(defmethod (setf $fbinaryp) (value (file file))
  (if value
      (th-file-binary ($handle file))
      (th-file-ascii ($handle file)))
  file)

(defmethod (setf $fasciip) (value (file file))
  (if value
      (th-file-ascii ($handle file))
      (th-file-binary ($handle file)))
  file)

(defmethod (setf $fautospacingp) (value (file file))
  (if value
      (th-file-auto-spacing ($handle file))
      (th-file-no-auto-spacing ($handle file)))
  file)

(defmethod (setf $fnoautospacingp) (value (file file))
  (if value
      (th-file-no-auto-spacing ($handle file))
      (th-file-auto-spacing ($handle file)))
  file)

(defmethod (setf $fquietp) (value (file file))
  (if value
      (th-file-quiet ($handle file))
      (th-file-pedantic ($handle file)))
  file)

(defmethod (setf $fpedanticp) (value (file file))
  (if value
      (th-file-pedantic ($handle file))
      (th-file-quiet ($handle file)))
  file)

(defmethod (setf $ferrorp) (value (file file))
  (when value (th-file-clear-error ($handle file)))
  file)

(defmethod $freadbyte ((file file)) (th-file-read-byte-scalar ($handle file)))
(defmethod $freadchar ((file file)) (th-file-read-char-scalar ($handle file)))
(defmethod $freadshort ((file file)) (th-file-read-short-scalar ($handle file)))
(defmethod $freadint ((file file)) (th-file-read-int-scalar ($handle file)))
(defmethod $freadlong ((file file)) (th-file-read-long-scalar ($handle file)))
(defmethod $freadfloat ((file file)) (th-file-read-float-scalar ($handle file)))
(defmethod $freaddouble ((file file)) (th-file-read-double-scalar ($handle file)))

(defmethod $freadbyte! ((storage storage.byte) (file file))
  (th-file-read-byte ($handle storage) ($handle file))
  storage)
(defmethod $freadchar! ((storage storage.char) (file file))
  (th-file-read-char ($handle storage) ($handle file))
  storage)
(defmethod $freadshort! ((storage storage.short) (file file))
  (th-file-read-short ($handle storage) ($handle file))
  storage)
(defmethod $freadint! ((storage storage.int) (file file))
  (th-file-read-int ($handle storage) ($handle file))
  storage)
(defmethod $freadlong! ((storage storage.long) (file file))
  (th-file-read-long ($handle storage) ($handle file))
  storage)
(defmethod $freadfloat! ((storage storage.float) (file file))
  (th-file-read-float ($handle storage) ($handle file))
  storage)
(defmethod $freaddouble! ((storage storage.double) (file file))
  (th-file-read-double ($handle storage) ($handle file))
  storage)

(defmethod $fwritebyte (byte (file file))
  (th-file-write-byte-scalar ($handle file) byte)
  byte)
(defmethod $fwritechar (char (file file))
  (th-file-write-char-scalar ($handle file) char)
  char)
(defmethod $fwriteshort (short (file file))
  (th-file-write-short-scalar ($handle file) short)
  short)
(defmethod $fwriteint (int (file file))
  (th-file-write-int-scalar ($handle file) int)
  int)
(defmethod $fwritelong (long (file file))
  (th-file-write-long-scalar ($handle file) long)
  long)
(defmethod $fwritefloat (float (file file))
  (th-file-write-float-scalar ($handle file) float)
  float)
(defmethod $fwritedouble (double (file file))
  (th-file-write-double-scalar ($handle file) double)
  double)

(defmethod $fwrite ((storage storage.byte) (file file))
  (th-file-write-byte ($handle file) ($handle storage)))
(defmethod $fwrite ((storage storage.char) (file file))
  (th-file-write-char ($handle file) ($handle storage)))
(defmethod $fwrite ((storage storage.short) (file file))
  (th-file-write-short ($handle file) ($handle storage)))
(defmethod $fwrite ((storage storage.int) (file file))
  (th-file-write-int ($handle file) ($handle storage)))
(defmethod $fwrite ((storage storage.long) (file file))
  (th-file-write-long ($handle file) ($handle storage)))
(defmethod $fwrite ((storage storage.float) (file file))
  (th-file-write-float ($handle file) ($handle storage)))
(defmethod $fwrite ((storage storage.double) (file file))
  (th-file-write-double ($handle file) ($handle storage)))

(defmethod $fsync ((file file)) (th-file-synchronize ($handle file)))
(defmethod $fseek ((file file) position) (th-file-seek ($handle file) position))
(defmethod $fseekend ((file file)) (th-file-seek-end ($handle file)))
(defmethod $ftell ((file file)) (th-file-position ($handle file)))
(defmethod $fclose ((file file)) (th-file-close ($handle file)))

(defmethod $fname ((file file.disk)) (th-disk-file-name ($handle file)))

(defmethod $storage ((file file.memory)) (th-memory-file-storage ($handle file)))
